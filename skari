#!/usr/bin/env python3

# Copyright 2020 Carl Winb√§ck. See the COPYING file at the top-level
# directory of this distribution.


from argparse import ArgumentParser
from collections import namedtuple
from datetime import datetime,timezone
from jinja2 import Environment, FileSystemLoader
import os
import sys


def check_arg(args=None):
    p = ArgumentParser()

    p.add_argument('-s',
                   '--site-definitions',
                   help='path to file containing the site definitions',
                   required='True')
    p.add_argument('-t',
                   '--template',
                   help='path to file containing the configuration template',
                   required='True')

    results = p.parse_args(args)

    return (results.site_definitions,
            results.template)


def get_ciphers():
    cipher_list = ""
    with open('./data/ciphers.txt', 'r') as f:
        cipher_list = ':'.join(line.strip() for line in f)
    return cipher_list


def get_config(config_file):
    result = []
    Site = namedtuple('Site',
                      'short_name sitetype primary_hostname alt_hostname')

    with open(config_file, 'r') as f:
        for line in f.read().splitlines():
            clean_line = ''.join(line.split())
            sitetype = 'php' if '+' in clean_line else 'static'
            base_data = clean_line.replace('+', ':').split(':')
            hostnames = base_data[1].split('/')
            short_name = base_data[0]
            primary_hostname = hostnames[0]
            alt_hostname = hostnames[1]
            s = Site(short_name, sitetype, primary_hostname, alt_hostname)
            result.append(s)

    return result


def main():
    sites_path, template_path = check_arg(sys.argv[1:])
    template_dir = os.path.dirname(template_path)
    env = Environment(loader=FileSystemLoader(template_dir))
    template = env.get_template('nginx.j2')
    print(template.render(
        sites = get_config(sites_path),
        timestamp = datetime.now(timezone.utc),
        ciphers = get_ciphers()
    ))


if __name__ == '__main__':
    main()
